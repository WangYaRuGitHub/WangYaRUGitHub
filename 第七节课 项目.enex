<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20201201T150051Z" application="Evernote/Windows" version="6.x">
<note><title>第七节课 项目</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div style="min-height: 15pt; text-align: left;"><span style="min-height: 15pt; font-size: 12pt; font-family: 微软雅黑;">静态网页：静态内容。</span><span style="font-size: 12pt; color: unset; font-family: 微软雅黑;">通过url请求的内容text/html，内容一样</span></div><div style="min-height: 15pt; text-align: left;"><span style="font-size: 12pt;"><br/></span></div><div style="min-height: 15pt; text-align: left;"><span style="min-height: 15pt; font-size: 12pt; font-family: 微软雅黑;">数据填充网页：</span></div><div style="min-height: 15pt; text-align: left;"><span style="min-height: 15pt; font-size: 12pt; font-family: 微软雅黑;">（1）服务端动态渲染：jsp（本质上就是Servlet,打印html的内容，变量填充），freemarker（框架，基于模板把变量填充）</span></div><div style="min-height: 15pt; text-align: left;"><span style="min-height: 15pt; font-size: 12pt; font-family: 微软雅黑;">（2）ajax请求,js代码发送请求数据（任何Content-Type）,通过解析响应数据（一般是json格式），代码来完成网页动态内容/动态事件——需要了解请求-响应整个流程，前端代码不要求</span></div><div style="min-height: 15pt; text-align: left;"><span style="min-height: 15pt; font-size: 12pt; font-family: 微软雅黑;"><br/></span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">Http协议</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">头信息Content-Type(请求和响应)&nbsp;数据类型：指定消息体的格式，要对端以响应的格式解析</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;"><br/></span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;"><br/></span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">text/html</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">x-www-form-urlencoded:表单提交格式（表单数据类型），请求体数据格式和queryString一样。</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">都是k1=v2&amp;k2=v2 request.getParameter(&quot;键&quot;)；获取数据</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;"><br/></span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">queryString:url中请求数据</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">application/json:消息体数据格式必须是json字符串request.getInputStream获取请求体，数据作为输入流获取</span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;"><br/></span></div><div style="text-align: left;"><span style="font-family: 微软雅黑;">在通过json框架，反序列化作为一个java对象，请求数据和对象属性要一致，否则报错</span></div><div style="min-height: 15pt; text-align: left;"><span style="font-family: 微软雅黑;">服务端返回响应数据：都返回 application/json数据类型</span><br/></div><div style="min-height: 15pt; text-align: left;"><span style="font-family: 微软雅黑;"><br/></span></div><div style="min-height: 15pt; text-align: left;"><span style="font-family: 微软雅黑;">Servlet代码逻辑：</span></div><div style="min-height: 15pt; text-align: left;"><span style="font-family: 微软雅黑;">（1）获取请求数据</span></div><div style="min-height: 15pt; text-align: left;"><span style="font-family: 微软雅黑;">（2）如果请求数据类型为 application/json，反序列化为java对象</span></div><div 